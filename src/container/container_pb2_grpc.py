# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from container import container_pb2 as container_dot_container__pb2


class ContainerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Invoke = channel.unary_unary(
                '/container.Container/Invoke',
                request_serializer=container_dot_container__pb2.InvokeRequest.SerializeToString,
                response_deserializer=container_dot_container__pb2.InvokeResponse.FromString,
                )
        self.SetEnvs = channel.unary_unary(
                '/container.Container/SetEnvs',
                request_serializer=container_dot_container__pb2.SetEnvsRequest.SerializeToString,
                response_deserializer=container_dot_container__pb2.SetEnvsResponse.FromString,
                )
        self.LoadCode = channel.unary_unary(
                '/container.Container/LoadCode',
                request_serializer=container_dot_container__pb2.LoadCodeRequest.SerializeToString,
                response_deserializer=container_dot_container__pb2.LoadCodeResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/container.Container/Stop',
                request_serializer=container_dot_container__pb2.StopRequest.SerializeToString,
                response_deserializer=container_dot_container__pb2.StopResponse.FromString,
                )


class ContainerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Invoke(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEnvs(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadCode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ContainerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Invoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Invoke,
                    request_deserializer=container_dot_container__pb2.InvokeRequest.FromString,
                    response_serializer=container_dot_container__pb2.InvokeResponse.SerializeToString,
            ),
            'SetEnvs': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEnvs,
                    request_deserializer=container_dot_container__pb2.SetEnvsRequest.FromString,
                    response_serializer=container_dot_container__pb2.SetEnvsResponse.SerializeToString,
            ),
            'LoadCode': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadCode,
                    request_deserializer=container_dot_container__pb2.LoadCodeRequest.FromString,
                    response_serializer=container_dot_container__pb2.LoadCodeResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=container_dot_container__pb2.StopRequest.FromString,
                    response_serializer=container_dot_container__pb2.StopResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'container.Container', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Container(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Invoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/container.Container/Invoke',
            container_dot_container__pb2.InvokeRequest.SerializeToString,
            container_dot_container__pb2.InvokeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEnvs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/container.Container/SetEnvs',
            container_dot_container__pb2.SetEnvsRequest.SerializeToString,
            container_dot_container__pb2.SetEnvsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/container.Container/LoadCode',
            container_dot_container__pb2.LoadCodeRequest.SerializeToString,
            container_dot_container__pb2.LoadCodeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/container.Container/Stop',
            container_dot_container__pb2.StopRequest.SerializeToString,
            container_dot_container__pb2.StopResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
