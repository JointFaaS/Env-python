# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from worker import worker_pb2 as worker_dot_worker__pb2


class WorkerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Invoke = channel.unary_unary(
                '/worker.Worker/Invoke',
                request_serializer=worker_dot_worker__pb2.InvokeRequest.SerializeToString,
                response_deserializer=worker_dot_worker__pb2.InvokeResponse.FromString,
                )
        self.Register = channel.unary_unary(
                '/worker.Worker/Register',
                request_serializer=worker_dot_worker__pb2.RegisterRequest.SerializeToString,
                response_deserializer=worker_dot_worker__pb2.RegisterResponse.FromString,
                )
        self.Reset = channel.unary_unary(
                '/worker.Worker/Reset',
                request_serializer=worker_dot_worker__pb2.ResetRequest.SerializeToString,
                response_deserializer=worker_dot_worker__pb2.ResetResponse.FromString,
                )
        self.InitFunction = channel.unary_unary(
                '/worker.Worker/InitFunction',
                request_serializer=worker_dot_worker__pb2.InitFunctionRequest.SerializeToString,
                response_deserializer=worker_dot_worker__pb2.InitFunctionResponse.FromString,
                )
        self.Metrics = channel.unary_unary(
                '/worker.Worker/Metrics',
                request_serializer=worker_dot_worker__pb2.MetricsRequest.SerializeToString,
                response_deserializer=worker_dot_worker__pb2.MetricsResponse.FromString,
                )


class WorkerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Invoke(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitFunction(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Metrics(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Invoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Invoke,
                    request_deserializer=worker_dot_worker__pb2.InvokeRequest.FromString,
                    response_serializer=worker_dot_worker__pb2.InvokeResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=worker_dot_worker__pb2.RegisterRequest.FromString,
                    response_serializer=worker_dot_worker__pb2.RegisterResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=worker_dot_worker__pb2.ResetRequest.FromString,
                    response_serializer=worker_dot_worker__pb2.ResetResponse.SerializeToString,
            ),
            'InitFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.InitFunction,
                    request_deserializer=worker_dot_worker__pb2.InitFunctionRequest.FromString,
                    response_serializer=worker_dot_worker__pb2.InitFunctionResponse.SerializeToString,
            ),
            'Metrics': grpc.unary_unary_rpc_method_handler(
                    servicer.Metrics,
                    request_deserializer=worker_dot_worker__pb2.MetricsRequest.FromString,
                    response_serializer=worker_dot_worker__pb2.MetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'worker.Worker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Worker(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Invoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Invoke',
            worker_dot_worker__pb2.InvokeRequest.SerializeToString,
            worker_dot_worker__pb2.InvokeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Register',
            worker_dot_worker__pb2.RegisterRequest.SerializeToString,
            worker_dot_worker__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Reset',
            worker_dot_worker__pb2.ResetRequest.SerializeToString,
            worker_dot_worker__pb2.ResetResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/InitFunction',
            worker_dot_worker__pb2.InitFunctionRequest.SerializeToString,
            worker_dot_worker__pb2.InitFunctionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Metrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Metrics',
            worker_dot_worker__pb2.MetricsRequest.SerializeToString,
            worker_dot_worker__pb2.MetricsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
